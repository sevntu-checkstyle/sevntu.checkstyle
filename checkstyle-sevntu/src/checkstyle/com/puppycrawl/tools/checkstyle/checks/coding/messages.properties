array.trailing.comma=Array should contain trailing comma.
assignment.inner.avoid=Inner assignments should be avoided.
avoid.declare.constants=Please avoid to declare constant(s) in the interface.
avoid.finalizer.method=Avoid using finalizer method.
avoid.clone.method=Avoid using clone method.
avoid.hiding.cause.exception=Cause exception ''{0}'' was lost.
avoid.not.short.circuit.operators.for.boolean=Not short-circuit Operator ''{0}'' used.
covariant.equals=covariant equals without overriding equals(java.lang.Object).
custom.declaration.order.field=Field definition in wrong order. Expected ''{0}'' then ''{1}''.
custom.declaration.order.constructor=Constructor definition in wrong order. Expected ''{0}'' then ''{1}''.
custom.declaration.order.method=Method definition in wrong order. Expected ''{0}'' then ''{1}''.
custom.declaration.order.class=Class definition in wrong order. Expected ''{0}'' then ''{1}''.
declaration.order.constructor=Constructor definition in wrong order.
declaration.order.method=Method definition in wrong order.
declaration.order.static=Static variable definition in wrong order.
declaration.order.instance=Instance variable definition in wrong order.
declaration.order.access=Variable access definition in wrong order.
default.comes.last=Default should be last label in the switch.
doublechecked.locking.avoid=The double-checked locking idiom is broken and should be avoided.
empty.statement=Empty statement.
equals.avoid.null=String literal expressions should be on the left side of an equals comparison.
equals.noHashCode=Definition of ''equals()'' without corresponding definition of ''hashCode()''.
explicit.init=Variable ''{0}'' explicitly initialized to ''{1}'' (default value for its type).
fall.through=Fall through from previous branch of the switch statement.
fall.through.last=Fall through from the last branch of the switch statement.
final.variable=Variable ''{0}'' should be declared final.
hidden.field=''{0}'' hides a field.
illegal.catch=Catching ''{0}'' is not allowed.
illegal.throw=Throwing ''{0}'' is not allowed.
illegal.token=Using ''{0}'' is not allowed.
illegal.token.text=Token text matches the illegal pattern ''{0}''.
illegal.type=Declaring variables, return values or parameters of type ''{0}'' is not allowed.
inline.conditional.avoid=Avoid inline conditionals.
instantiation.avoid=Instantiation of {0} should be avoided.
junit.method.name=The method ''{0}'' should be named ''{1}''.
junit.method.return.type=The method ''{0}'' must be declared with a {1} return type.
junit.method.parameters=The method ''{0}'' must be declared with no parameters.
junit.method.public.and.static=The method ''{0}'' must be declared static.
junit.method.protected.or.public=The method ''{0}'' must be public or protected.
junit.method.static=The method ''{0}'' shouldn''t be static.
magic.number=''{0}'' is a magic number.
missing.ctor=Class should define a constructor.
missing.package.declaration=Missing package declaration.
missing.super.call=Method ''{0}'' should call ''super.{0}''.
missing.switch.default=switch without \"default\" clause.
modified.control.variable=Control variable ''{0}'' is modified.
multiple.string.literal=The String {0} appears {1} times in the file.
multiple.variable.declarations=Only one variable definition per line allowed.
multiple.variable.declarations.comma=Each variable declaration must be in its own statement.
nested.if.depth=Nested if-else depth is {0,number,integer} (max allowed is {1,number,integer}).
nested.try.depth=Nested try depth is {0,number,integer} (max allowed is {1,number,integer}).
overridable.method=Overridable method ''{0}'' is called in {1} body.
overridable.method.leads=Calling the method ''{0}'' in {1} body leads to the call of the overridable method ''{2}''.
parameter.assignment=Assignment of parameter ''{0}'' is not allowed.
redundant.throws.classInfo=Unable to get class information for {0}.
redundant.throws.duplicate=Redundant throws: ''{0}'' listed more then one time.
redundant.throws.subclass=Redundant throws: ''{0}'' is subclass of ''{1}''.
redundant.throws.unchecked=Redundant throws: ''{0}'' is unchecked exception.
require.this.variable=Reference to instance variable ''{0}'' needs \"this.\".
require.this.unfound.variable=Unable find where ''{0}'' is declared.
require.this.method=Method call to ''{0}'' needs \"this.\".
return.count=Return count is {0,number,integer} (max allowed is {1,number,integer}).
simplify.boolreturn=Conditional logic can be removed.
simplify.expression=Expression can be simplified.
string.literal.equality=Literal Strings should be compared using equals(), not ''{0}''.
unnecessary.paren.assign=Unnecessary parentheses around assignment right-hand side.
unnecessary.paren.expr=Unnecessary parentheses around expression.
unnecessary.paren.ident=Unnecessary parentheses around identifier ''{0}''.
unnecessary.paren.literal=Unnecessary parentheses around literal ''{0}''.
unnecessary.paren.return=Unnecessary parentheses around return value.
unnecessary.paren.string=Unnecessary parentheses around string {0}.
return.null.Boolean=Method declares to return Boolean and returns null.
