VariableDeclarationUsageDistance.name = Variable Declaration Usage Distance
VariableDeclarationUsageDistance.desc = Checks distance between declaration of variable and its first usage.<br/>\r\n<br/>\r\nRationale: By minimizing the distance between declaration of variable and its first usage, you increase the readability and maintainability of your code and reduce the likelihood of error. See Bloch, Effective Java, Item 45: Minimize the scope of local variables.<br/>\r\n<br/>\r\nExample #1:<br/>\r\n<br/>\r\nint count;<br/>\r\na = a + b;<br/>\r\nb = a + a;<br/>\r\ncount = b; // DECLARATION OF VARIABLE 'count' SHOULD BE HERE (distance = 3)<br/>\r\n<br/>\r\nExample #2:<br/>\r\n<br/>\r\nint count;<br/>\r\n{<br/>\r\na = a + b;<br/>\r\ncount = b; // DECLARATION OF VARIABLE 'count' SHOULD BE HERE (distance = 2)<br/>\r\n}<br/>\r\n<br/>\r\nATTENTION!! (Not supported cases)<br/>\r\n<br/>\r\nCase #1:<br/>\r\n<br/>\r\n{<br/>\r\nint c;<br/>\r\nint a = 3;<br/>\r\nint b = 2;<br/>\r\n{<br/>\r\n\ta = a + b;<br/>\r\n\tc = b;<br/>\r\n}<br/>\r\n}<br/>\r\n<br/>\r\nDistance for variable 'a' = 1;<br/>\r\nDistance for variable 'b' = 1;<br/>\r\nDistance for variable 'c' = 2.<br/>\r\n<br/>\r\nAs distance by default is 1 the Check doesn't raise warning for variables 'a' and 'b' to move them into the block.<br/>\r\n<br/>\r\nCase #2:<br/>\r\n<br/>\r\nint sum = 0;<br/>\r\nfor (int i = 0; i < 20; i++) {<br/>\r\n\ta++;<br/>\r\n\tb--;<br/>\r\n\tsum++;<br/>\r\n\tif (sum > 10) {<br/>\r\n\t\tres = true;<br/>\r\n\t}<br/>\r\n}<br/>\r\n<br/>\r\nDistance for variable 'sum' = 3.<br/>\r\n<br/>\r\nAs distance more then default one, the Check raises warning for variable 'sum' to move it into the 'for(...)' block. But there is situation when variable 'sum' hasn't to be 0 within each iteration. So, to avoid such warnings you can use Suppression Filter, provided by Checkstyle, for the whole class.
VariableDeclarationUsageDistance.ignoreVariablePattern = RegEx pattern for ignoring distance calculation for variables listed in this pattern
VariableDeclarationUsageDistance.allowedDistance = Allowed distance between declaration of variable and its first usage
VariableDeclarationUsageDistance.validateBetweenScopes = Allows to calculate distance between declaration of variable and its first usage in different scopes
VariableDeclarationUsageDistance.ignoreFinal = Allows to ignore variables with 'final' modifier.
