AbstractClassNameExtended.desc   = Checks that abstract class names follow naming convention.
AbstractClassNameExtended.format = Regular expression defining required naming pattern.
AbstractClassNameExtended.name   = Abstract Class Name Extended
AbstractClassNameExtended.checkModifier = Check if class name starts with 'Abstract' it must have abstract modifier.
AbstractClassNameExtended.checkName     = Check if class has abstract modifier class name must follow naming convention.

AbbreviationAsWordInName.name = Abbreviation As Word In Name
AbbreviationAsWordInName.desc = Check name of the targeted item to validate abbreviations(capital letters) length in it. Options: AllowedAbbreviationLength - allowed abbreviation length(length of capital characters). AllowedAbbreviations - list of abbreviations separated by comma, without spaces.
AbbreviationAsWordInName.allowedAbbreviationLength = Amount of allowed capital letters in abbreviation
AbbreviationAsWordInName.allowedAbbreviations = an string of abbreviations that must be skipped from checking, each abbreviation separated by comma, no spaces are allowed.
AbbreviationAsWordInName.targets = Targets for a check that need to be validated.
AbbreviationAsWordInName.ignoreFinal = Allows to ignore variables with 'final' modifier.
AbbreviationAsWordInName.ignoreStatic = Allows to ignore variables with 'static' modifier.
AbbreviationAsWordInName.ignoreOverriddenMethods = Allows to ignore methods with '@Override' annotation.

InterfaceTypeParameterNameCheck.name = Interface type parameter name check
InterfaceTypeParameterNameCheck.desc = Checks that interface type parameter names conform to a format specified by the format property
InterfaceTypeParameterNameCheck.format = Regex that interface type parameter names must to conform