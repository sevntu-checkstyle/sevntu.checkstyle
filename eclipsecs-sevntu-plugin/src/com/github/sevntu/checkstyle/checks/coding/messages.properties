avoid.declare.constants=Please avoid to declare constant(s) in the interface.

avoid.hiding.cause.exception=Cause exception ''{0}'' was lost.
avoid.not.short.circuit.operators.for.boolean=Not short-circuit Operator ''{0}'' used.

avoid.default.serializable.in.inner.classes=Inner class should not implement default Serializable interface.

avoid.modifiers.for.types=''{0}'' instance should not have ''{1}'' modifier.

custom.declaration.order.field=Field definition in wrong order. Expected ''{0}'' then ''{1}''.
custom.declaration.order.constructor=Constructor definition in wrong order. Expected ''{0}'' then ''{1}''.
custom.declaration.order.method=Method definition in wrong order. Expected ''{0}'' then ''{1}''.
custom.declaration.order.class=Class definition in wrong order. Expected ''{0}'' then ''{1}''.

illegal.catch=Catching ''{0}'' is not allowed.

forbid.instantiation=Instantiation of ''{0}'' is not allowed.

forbid.certain.imports=This import should not match ''{0}'' pattern, it is forbidden in {1}.

multiple.variable.declarations=Only one variable definition per line allowed.
multiple.variable.declarations.comma=Each variable declaration must be in its own statement.

overridable.method=Overridable method ''{0}'' is called in {1} body.
overridable.method.leads=Calling the method ''{0}'' in {1} body leads to the call of the overridable method ''{2}''.

multiple.string.literal=The String {0} appears {1} times in the file.

unnecessary.paren.assign=Unnecessary parentheses around assignment right-hand side.
unnecessary.paren.expr=Unnecessary parentheses around expression.
unnecessary.paren.ident=Unnecessary parentheses around identifier ''{0}''.
unnecessary.paren.literal=Unnecessary parentheses around literal ''{0}''.
unnecessary.paren.return=Unnecessary parentheses around return value.
unnecessary.paren.string=Unnecessary parentheses around string {0}.
return.null.Boolean=Method declares to return Boolean and returns null.

redundant.return=Redundant return.

return.boolean.ternary=Returning explicit boolean from ternary operator.

return.count.extended.method=Return count for ''{0}'' method is {1,number,integer} (max allowed is {2,number,integer}).
return.count.extended.ctor=Return count for ''{0}'' constructor is {1,number,integer} (max allowed is {2,number,integer}).

