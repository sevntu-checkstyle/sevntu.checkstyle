language: java
sudo: false

cache:
  directories:
  - ~/.m2

branches:
  only:
    - master

install:
  -

matrix:
  fast_finish: true
  include:
    # eclipse-cs
    - jdk: oraclejdk8
      env:
        - DESC="eclipse-cs"
        - CMD_="cd sevntu-checks && mvn -e clean install -Dmaven.test.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true && cd .. "
        - CMD0="git clone git://git.code.sf.net/p/eclipse-cs/git eclipse-cs-git"
        - CMD1="&& cd eclipse-cs-git/ && git checkout 8.5.1"
        - CMD2="&& cd net.sf.eclipsecs.parent/ && mvn -e install"
        - CMD3="&& cd ../../"
        - CMD4="&& cd eclipsecs-sevntu-plugin && mvn -e verify && mvn -e javadoc:javadoc"
        - CMD=$CMD_" && "$CMD0$CMD1$CMD2$CMD3$CMD4
        - PREINSTALL="true"

    # maven-plugin
    - jdk: oraclejdk8
      env:
        - DESC="maven-plugin"
        - CMD0="cd sevntu-checks && mvn -e clean install -Dmaven.test.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true && cd .. "
        - CMD=$CMD0" && ""cd sevntu-checkstyle-maven-plugin && mvn -e verify && mvn -e javadoc:javadoc"

    # idea-extension
    - jdk: oraclejdk8
      env:
        - DESC="idea-extension"
        - CMD0="cd sevntu-checks && mvn -e clean install -Dmaven.test.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true && cd .. "
        - CMD=$CMD0" && ""cd sevntu-checkstyle-idea-extension && mvn -e verify && mvn -e javadoc:javadoc"

    # sonar-plugin
    - jdk: oraclejdk8
      env:
        - DESC="sonar-plugin"
        - CMD0="cd sevntu-checks && mvn -e clean install -Dmaven.test.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true && cd .. "
        - CMD=$CMD0" && ""cd sevntu-checkstyle-sonar-plugin && mvn -e verify && mvn -e javadoc:javadoc"

    # checks
    - jdk: oraclejdk8
      env:
        - DESC="checks"
        - CMD0="cd sevntu-checks && mvn -e install"
        - CMD1="&& mvn -e verify -Pselftesting"
        - CMD2="&& mvn -e javadoc:javadoc"
        - CMD3="&& mvn -e jacoco:report coveralls:jacoco"
        - CMD=$CMD0$CMD1$CMD2$CMD3

    # regression on checkstyle
    # disabled until https://github.com/sevntu-checkstyle/sevntu.checkstyle/issues/629
    #- jdk: oraclejdk8
    #  env:
    #    - DESC="checkstyle regression"
    #    - CMD0="git clone https://github.com/checkstyle/checkstyle "
    #    - CMD1=" && cd sevntu-checks && mvn -e install -DskipTests -Dcheckstyle.skip=true -Dcobertura.skip=true"
    #    - CMD2=" && mvn -e test -Dtest=CheckstyleRegressionTest#setupFiles -Dregression-path=../"
    #    - CMD3=" && cd ../ && cd checkstyle && mvn -e clean verify -e -DskipTests -DskipITs -Dpmd.skip=true -Dfindbugs.skip=true -Dcobertura.skip=true"
    #    - CMD=$CMD0$CMD1$CMD2$CMD3

    # eclipse static analysis
    - jdk: oraclejdk8
      env:
        - DESC="eclipse static analysis
        - CMD="cd sevntu-checks && mvn -e clean compile exec:exec -Peclipse-compiler"

    # testing of PR format
    - env:
        - DESC="test Issue ref in PR description"
        - CMD_="set -e"
        - CMD0=" && if [[ \$TRAVIS_PULL_REQUEST == 'false' ]]; then exit 0; fi "
        - CMD1=" && LINK_COMMITS=https://api.github.com/repos/sevntu-checkstyle/sevntu.checkstyle/pulls/$TRAVIS_PULL_REQUEST/commits "
        - CMD2=" && COMMITS=\$(curl -s -H 'Authorization: token $READ_ONLY_TOKEN' \$LINK_COMMITS | jq '.[0] | .commit.message') "
        - CMD3=" && echo 'Messages from github:'\${COMMITS:0:60}... "
        - CMD4=" && ISSUE_NUMBER=\$( echo \$COMMITS | sed -e 's/^.*Issue //' | sed -e 's/:.*//') "
        - CMD5=" && echo 'Issue number:'\$ISSUE_NUMBER && RESULT=0"
        - CMD6=" && if [[ \$ISSUE_NUMBER =~ ^#[0-9]+$ ]]; then "
        - CMD7="      LINK_PR=https://api.github.com/repos/sevntu-checkstyle/sevntu.checkstyle/pulls/$TRAVIS_PULL_REQUEST  "
        - CMD8="      && LINK_ISSUE=https://api.github.com/repos/sevntu-checkstyle/sevntu.checkstyle/issues/\${ISSUE_NUMBER:1} "
        - CMD9="      && REGEXP=(\$ISSUE_NUMBER\|https://github.com/sevntu-checkstyle/sevntu.checkstyle/issues/\${ISSUE_NUMBER:1})"
        - CMD10="     && PR_DESC=\$(curl -s -H 'Authorization: token $READ_ONLY_TOKEN' \$LINK_PR | jq '.body' | grep -E \$REGEXP | cat ) "
        - CMD11="     && echo 'PR Description grepped:'\${PR_DESC:0:80}  "
        - CMD12="     && if [[ -z \$PR_DESC ]]; then "
        - CMD13="          echo 'Please put a reference of Issue to PR description, this will bind Issue and PR in Github' && RESULT=1; "
        - CMD14="        fi "
        - CMD15="     && LABEL_APRV=\$(curl -s -H 'Authorization: token $READ_ONLY_TOKEN' \$LINK_ISSUE | jq '.labels [] | .name' | grep approved | cat | wc -l ) "
        - CMD16="     && if [[ \$LABEL_APRV == 0 ]]; then "
        - CMD17="          echo 'You provide PR to Issue that is not approved yes, please ask admins to approve your issue first' && RESULT=1; "
        - CMD18="        fi "
        - CMD19="   fi "
        - CMD20=" && if [[ \$RESULT == 0 ]]; then "
        - CMD21="       echo 'PR validation succeed.'; "
        - CMD22="   else "
        - CMD23="       echo 'PR validation failed.' && false; "
        - CMD24="   fi "
        - CMD=$CMD_$CMD0$CMD1$CMD2$CMD3$CMD4$CMD5$CMD6$CMD7$CMD8$CMD9$CMD10$CMD11$CMD12$CMD13$CMD14$CMD15
        - CMD=$CMD$CMD16$CMD17$CMD18$CMD19$CMD20$CMD21$CMD22$CMD23$CMD24


script:
  - eval $CMD

after_success:
